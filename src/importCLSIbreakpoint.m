function breakpoints = importCLSIbreakpoint(filename, dataLines)
%IMPORTFILE Import data from a text file
%  [SPECIES, ANTIBIOTIC, S, R] = IMPORTFILE(FILENAME) reads data from
%  text file FILENAME for the default selection.  Returns the data as
%  column vectors.
%
%  [SPECIES, ANTIBIOTIC, S, R] = IMPORTFILE(FILE, DATALINES) reads data
%  for the specified row interval(s) of text file FILENAME. Specify
%  DATALINES as a positive scalar integer or a N-by-2 array of positive
%  scalar integers for dis-contiguous row intervals.
%
%  Example:
%  [Species, Antibiotic, S, R] = importfile("/Users/RobertBeardmore/Desktop/RobPortable/work/MATLAB/EUCAST-ECOFF/CLSI/breakpoints.csv", [2, Inf]);
%
%  See also READTABLE.
%
% Auto-generated by MATLAB on 13-Oct-2022 11:45:07

%% Input handling

% If dataLines is not specified, define defaults
if nargin < 2
    dataLines = [2, Inf];
end

%% Set up the Import Options and import the data
opts = delimitedTextImportOptions("NumVariables", 4);

% Specify range and delimiter
opts.DataLines = dataLines;
opts.Delimiter = ",";

% Specify column names and types
opts.VariableNames = ["Species", "Antibiotic", "S", "R"];
opts.VariableTypes = ["categorical", "categorical", "double", "double"];

% Specify file level properties
opts.ExtraColumnsRule = "ignore";
opts.EmptyLineRule = "read";

% Specify variable properties
opts = setvaropts(opts, ["Species", "Antibiotic"], "EmptyFieldRule", "auto");

% Import the data
tbl = readtable(filename, opts);

%% Convert to output type
Species = tbl.Species;
Antibiotic = tbl.Antibiotic;
S = tbl.S;
R = tbl.R;

breakpoints.Species = Species;
breakpoints.Antibiotic = Antibiotic;
breakpoints.S = S;
breakpoints.R = R;

end