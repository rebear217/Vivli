function dfmatchedbp = importBothBreakpointSets()

    %IMPORTFILE Import data from a spreadsheet
    %  DFMATCHEDBP = IMPORTFILE(FILE) reads data from the first worksheet in
    %  the Microsoft Excel spreadsheet file named FILE.  Returns the data as
    %  a table.
    %
    %  DFMATCHEDBP = IMPORTFILE(FILE, SHEET) reads from the specified
    %  worksheet.
    %
    %  DFMATCHEDBP = IMPORTFILE(FILE, SHEET, DATALINES) reads from the
    %  specified worksheet for the specified row interval(s). Specify
    %  DATALINES as a positive scalar integer or a N-by-2 array of positive
    %  scalar integers for dis-contiguous row intervals.
    %
    %  Example:
    %  dfmatchedbp = importfile("/Users/RobertBeardmore/Dropbox/EUCAST-ECOFF/EUCAST-CLSI-Matching/df_matched_bp.xlsx", "Sheet1", [2, 559]);
    %
    %  See also READTABLE.
    %
    % Auto-generated by MATLAB on 19-Dec-2022 20:47:33
    
    workbookFile = "./EUCAST-CLSI-Matching/df_matched_bp.xlsx";
    
    %% Input handling
    
    % If no sheet is specified, read first sheet
    sheetName = 1;
    
    % If row start and end points are not specified, define defaults
    dataLines = [2, 559];
    
    %% Set up the Import Options and import the data
    opts = spreadsheetImportOptions("NumVariables", 19);
    
    % Specify sheet and range
    opts.Sheet = sheetName;
    opts.DataRange = "A" + dataLines(1, 1) + ":S" + dataLines(1, 2);
    
    % Specify column names and types
    opts.VariableNames = ["Index_clsi", "FullName_clsi", "S_clsi", "R_clsi", "Genus_clsi", "Species_clsi", "Bacteria_clsi", "Antibiotic_clsi", "Index_eucast", "FullName_eucast", "S_eucast", "R_eucast", "Genus_eucast", "Species_eucast", "Bacteria_eucast", "Antibiotic_eucast", "exact_match", "match_score", "visual_inspection"];
    opts.VariableTypes = ["double", "string", "double", "double", "categorical", "categorical", "categorical", "categorical", "double", "categorical", "double", "double", "categorical", "string", "categorical", "categorical", "string", "double", "categorical"];
    
    % Specify variable properties
    opts = setvaropts(opts, ["FullName_clsi", "Species_eucast", "exact_match"], "WhitespaceRule", "preserve");
    opts = setvaropts(opts, ["FullName_clsi", "Genus_clsi", "Species_clsi", "Bacteria_clsi", "Antibiotic_clsi", "FullName_eucast", "Genus_eucast", "Species_eucast", "Bacteria_eucast", "Antibiotic_eucast", "exact_match", "visual_inspection"], "EmptyFieldRule", "auto");
    
    % Import the data
    dfmatchedbp = readtable(workbookFile, opts, "UseExcel", false);
    
    for idx = 2:size(dataLines, 1)
        opts.DataRange = "A" + dataLines(idx, 1) + ":S" + dataLines(idx, 2);
        tb = readtable(workbookFile, opts, "UseExcel", false);
        dfmatchedbp = [dfmatchedbp; tb]; %#ok<AGROW>
    end

end